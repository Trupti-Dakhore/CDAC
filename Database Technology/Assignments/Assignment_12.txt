1) Write a query that selects all customers whose ratings are equal to or greater than
ANY of Serres’. 
mysql> select cname, rating
    -> FROM Customers
    -> where  rating >= any (select  rating from Customers where  cname = 'Serres');
Empty set (0.00 sec)

2) Write a query using ANY or ALL that will find all salespeople who have no
customers located in their city. 
mysql> select sname
    -> from salespeople where city <> all (select city from customers);
+---------+
| sname   |
+---------+
| Rifkin  |
| Axelrod |
+---------+
2 rows in set (0.00 sec)

mysql> select s.sname
    -> from salespeople s where s.city <> ALL (SELECT c.city FROM Customers c);
+---------+
| sname   |
+---------+
| Rifkin  |
| Axelrod |
+---------+
If you don’t use the alias s. before name, SQL won’t know which table the name column is coming from, leading to an error, especially if multiple tables are involved in the query. Using aliases like s. or c. helps SQL clearly understand where each column is coming from and avoids any confusion.


3) Write a query that selects all orders for amounts greater than any for the
customers in London.
select * 
from  orders 
where amt > ANY (
select orders.amt 
from  orders, Customers 
where orders.cnum = Customers.cnum and Customers.city = 'London'
);
mysql> select *
    from  orders
    where amt > any (
    select orders.amt
    from  orders, Customers
    where orders.cnum = Customers.cnum and Customers.city = 'London'
    );
+------+---------+------------+------+------+
| Onum | Amt     | date       | Cnum | Snum |
+------+---------+------------+------+------+
| 3002 | 1900.10 | 1990-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
| 3008 | 4723.00 | 1990-10-05 | 2006 | 1001 |
| 3010 | 1309.95 | 1990-10-06 | 2004 | 1002 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+

4) Write the above query using MIN or MAX.
mysql> SELECT *
    -> FROM orders
    -> WHERE amt > (SELECT MAX(amt)
    ->              FROM orders
    ->              JOIN Customers ON orders.cnum = Customers.cnum
    ->              WHERE Customers.city = 'London');
Empty set (0.00 sec)

